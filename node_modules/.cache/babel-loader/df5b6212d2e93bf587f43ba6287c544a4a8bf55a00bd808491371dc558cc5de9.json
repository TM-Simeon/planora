{"ast":null,"code":"var _jsxFileName = \"/root/projects/planora/src/components/linechart.js\";\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, CategoryScale, LineController, Tooltip, Legend } from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, LinearScale, CategoryScale, LineController, Tooltip, Legend, ChartDataLabels);\nconst dataPoints = [0, 75, 19, 60, 71, 22];\nconst data = {\n  labels: ['nil', 'Jan', 'Feb', 'Mar', 'Apr', 'May'],\n  datasets: [{\n    label: 'My Dataset',\n    data: dataPoints,\n    borderColor: 'blue',\n    tension: 0,\n    // sharp lines\n    fill: false\n  }]\n};\nconst maxY = Math.max(...dataPoints) + 30; // Add 2 units of top space\n\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      display: true\n    },\n    datalabels: {\n      color: 'black',\n      font: {\n        weight: 'bold'\n      },\n      offset: 10,\n      // distance from point\n      align: context => {\n        // Alternate position: above for even indexes, below for odd\n        return context.dataIndex % 2 === 0 ? 'top' : 'bottom';\n      },\n      formatter: value => `${value}` // Show the number\n    }\n  },\n  scales: {\n    y: {\n      beginAtZero: true,\n      max: maxY\n    }\n  }\n};\nexport default function MyLineChart() {\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n}\n_c = MyLineChart;\nvar _c;\n$RefreshReg$(_c, \"MyLineChart\");","map":{"version":3,"names":["Chart","ChartJS","LineElement","PointElement","LinearScale","CategoryScale","LineController","Tooltip","Legend","ChartDataLabels","Line","jsxDEV","_jsxDEV","register","dataPoints","data","labels","datasets","label","borderColor","tension","fill","maxY","Math","max","options","responsive","plugins","legend","display","datalabels","color","font","weight","offset","align","context","dataIndex","formatter","value","scales","y","beginAtZero","MyLineChart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/projects/planora/src/components/linechart.js"],"sourcesContent":["import {\n  Chart as ChartJS,\n  LineElement,\n  PointElement,\n  LinearScale,\n  CategoryScale,\n  LineController,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  LineElement,\n  PointElement,\n  LinearScale,\n  CategoryScale,\n  LineController,\n  Tooltip,\n  Legend,\n  ChartDataLabels\n);\n\nconst dataPoints = [0,75, 19, 60, 71, 22];\n\nconst data = {\n  labels: ['nil','Jan', 'Feb', 'Mar', 'Apr', 'May'],\n  datasets: [\n    {\n      label: 'My Dataset',\n      data: dataPoints,\n      borderColor: 'blue',\n      tension: 0, // sharp lines\n      fill: false,\n    },\n  ],\n};\n\nconst maxY = Math.max(...dataPoints) + 30; // Add 2 units of top space\n\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: { display: true },\n    datalabels: {\n      color: 'black',\n      font: {\n        weight: 'bold',\n      },\n      offset: 10, // distance from point\n      align: (context) => {\n        // Alternate position: above for even indexes, below for odd\n        return context.dataIndex % 2 === 0 ? 'top' : 'bottom';\n      },\n      formatter: (value) => `${value}`, // Show the number\n    },\n  },\n  scales: {\n    y: {\n      beginAtZero: true,\n      max: maxY,\n    },\n  },\n};\n\nexport default function MyLineChart() {\n  return <Line data={data} options={options} />;\n}\n"],"mappings":";AAAA,SACEA,KAAK,IAAIC,OAAO,EAChBC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,cAAc,EACdC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,OAAOC,eAAe,MAAM,2BAA2B;AACvD,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvCX,OAAO,CAACY,QAAQ,CACdX,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,cAAc,EACdC,OAAO,EACPC,MAAM,EACNC,eACF,CAAC;AAED,MAAMK,UAAU,GAAG,CAAC,CAAC,EAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAEzC,MAAMC,IAAI,GAAG;EACXC,MAAM,EAAE,CAAC,KAAK,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EACjDC,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,YAAY;IACnBH,IAAI,EAAED,UAAU;IAChBK,WAAW,EAAE,MAAM;IACnBC,OAAO,EAAE,CAAC;IAAE;IACZC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC;AAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGV,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;;AAE3C,MAAMW,OAAO,GAAG;EACdC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACPC,MAAM,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC;IACzBC,UAAU,EAAE;MACVC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE;QACJC,MAAM,EAAE;MACV,CAAC;MACDC,MAAM,EAAE,EAAE;MAAE;MACZC,KAAK,EAAGC,OAAO,IAAK;QAClB;QACA,OAAOA,OAAO,CAACC,SAAS,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,QAAQ;MACvD,CAAC;MACDC,SAAS,EAAGC,KAAK,IAAK,GAAGA,KAAK,EAAE,CAAE;IACpC;EACF,CAAC;EACDC,MAAM,EAAE;IACNC,CAAC,EAAE;MACDC,WAAW,EAAE,IAAI;MACjBlB,GAAG,EAAEF;IACP;EACF;AACF,CAAC;AAED,eAAe,SAASqB,WAAWA,CAAA,EAAG;EACpC,oBAAO/B,OAAA,CAACF,IAAI;IAACK,IAAI,EAAEA,IAAK;IAACU,OAAO,EAAEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C;AAACC,EAAA,GAFuBL,WAAW;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}